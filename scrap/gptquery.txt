ok please analyse my code :

HTML:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fast Print Service - Upload & Estimate</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="overlay">
        <div class="container">
            <header>
                <h1>Fast Print Service</h1>
                <p>Upload your document, get a quick estimate, and place your order!</p>
            </header>

            <section class="upload-section">
                <h2>Upload Your Document</h2>
                <form id="uploadForm" action="upload.php" method="POST" enctype="multipart/form-data">
                    <!-- Name and Mobile Number Fields -->
                    <div class="input-group">
                        <label for="customerName">Your Name</label>
                        <input type="text" id="customerName" name="customerName" placeholder="Enter your name" required>
                    </div>

                    <div class="input-group">
                        <label for="customerMobile">Your Mobile Number</label>
                        <input type="text" id="customerMobile" name="customerMobile" placeholder="Enter your mobile number" required>
                    </div>

                    <div class="input-group">
                        <label for="fileUpload">Choose a File (PDF, Word, or Image)</label>
                        <input type="file" id="fileUpload" name="fileUpload" accept=".pdf, .docx, .jpg, .jpeg, .png" required>
                    </div>

                    <div class="input-group">
                        <label for="printType">Print Type</label>
                        <select id="printType" name="printType" required>
                            <option value="bw">Black & White</option>
                            <option value="color">Color</option>
                        </select>
                    </div>

                    <div class="input-group">
                        <label for="delivery">Delivery Option</label>
                        <select id="delivery" name="delivery" required>
                            <option value="delivery">Home Delivery</option>
                            <option value="counter">Counter Collection</option>
                        </select>
                    </div>

                    <button type="button" id="estimateBtn" class="btn">Get Price Estimate</button>
                    <!-- Updated Feedback Section -->
                    <div id="estimateResult"></div>

                    <button type="submit" class="btn submit-btn">Submit Order</button>
                </form>
            </section>
        </div>
    </div>

    <script src="scripts.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.min.js"></script>

</body>
</html>

CSS:
/* Resetting margin, padding and setting box-sizing */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Arial', sans-serif;
    color: #fff;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(to right, #ff7e5f, #feb47b); /* Warm gradient */
}

.overlay {
    position: center;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.4); /* Slight dark overlay */
}

.container {
    position: relative;
    background: #fff;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    width: 500px;
    z-index: 1;
    color: #333;
}

header {
    text-align: center;
    margin-bottom: 30px;
}

header h1 {
    font-size: 36px;
    color: #ff7e5f;
    margin-bottom: 10px;
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 2px;
}

header p {
    font-size: 18px;
    color: #333;
}

.upload-section {
    background: rgba(0, 0, 0, 0.05);
    padding: 30px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.upload-section h2 {
    font-size: 24px;
    margin-bottom: 20px;
    color: #ff7e5f;
    text-align: center;
    text-transform: uppercase;
}

.input-group {
    margin-bottom: 20px;
    position: relative;
}

input[type="text"],
input[type="file"],
select {
    width: 100%;
    padding: 15px;
    border-radius: 8px;
    border: 2px solid #ddd;
    background: #fafafa;
    font-size: 16px;
    color: #333;
    box-sizing: border-box;
}

input[type="file"] {
    background-color: #fff;
}

input[type="file"]::file-selector-button {
    background-color: #ff7e5f;
    color: white;
    border: none;
    padding: 8px 20px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
}

input[type="file"]::file-selector-button:hover {
    background-color: #feb47b;
}

button {
    background: #ff7e5f;
    border: none;
    padding: 15px;
    color: white;
    font-size: 16px;
    border-radius: 8px;
    width: 100%;
    cursor: pointer;
    transition: background-color 0.3s ease-in-out;
}

button:hover {
    background: #feb47b;
}

.submit-btn {
    background-color: #2575fc;
}

.submit-btn:hover {
    background-color: #6a11cb;
}

#estimateResult {
    margin-top: 20px;
    font-size: 18px;
    font-weight: bold;
    text-align: center;
}

#estimateResult span {
    font-size: 22px;
    color: #ffd700;
}

/* Animation for form elements */
input[type="file"], select, button {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.7s ease-out forwards;
}

input[type="file"]:nth-child(1) {
    animation-delay: 0.1s;
}

select:nth-child(2) {
    animation-delay: 0.2s;
}

select:nth-child(3) {
    animation-delay: 0.3s;
}

button {
    animation-delay: 0.4s;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
#estimateResult {
    margin-top: 20px;
    font-size: 18px;
    font-weight: bold;
    text-align: center;
    padding: 15px;
    background: #f5f5f5;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

#estimateResult p {
    margin: 10px 0;
}

#estimateResult span {
    font-size: 22px;
    color: #ff7e5f;
}

PHP:
for upload :
<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_FILES['fileUpload'])) {
    // Get customer details from form
    $customerName = htmlspecialchars(trim($_POST['customerName']));
    $customerMobile = htmlspecialchars(trim($_POST['customerMobile']));
    $printType = htmlspecialchars(trim($_POST['printType']));
    $delivery = htmlspecialchars(trim($_POST['delivery']));

    // Ensure valid name and mobile number
    if (empty($customerName) || empty($customerMobile)) {
        echo 'Name and Mobile Number are required.';
        exit;
    }

    // Validate mobile number (simple regex to allow numbers only, with length between 10-15 digits)
    if (!preg_match("/^[0-9]{10,15}$/", $customerMobile)) {
        echo 'Invalid mobile number format. Please enter a valid 10-15 digit number.';
        exit;
    }

    // Get file details
    $fileTmpPath = $_FILES['fileUpload']['tmp_name'];
    $fileName = $_FILES['fileUpload']['name'];
    $fileSize = $_FILES['fileUpload']['size'];
    $fileType = $_FILES['fileUpload']['type'];

    // Set file upload directory
    $uploadDir = 'uploads/';

    // Check if the upload directory exists, if not, create it
    if (!is_dir($uploadDir)) {
        mkdir($uploadDir, 0777, true);
    }

    // Allowable file types
    $allowedTypes = ['application/pdf', 'application/msword', 'image/jpeg', 'image/png', 'image/jpg'];

    // Check if the file type is allowed
    if (in_array($fileType, $allowedTypes)) {
        // Sanitize the filename
        $fileExtension = pathinfo($fileName, PATHINFO_EXTENSION);
        $safeFileName = strtolower(preg_replace("/[^a-zA-Z0-9]/", "_", $customerName . '_' . $customerMobile));

        // Create a new filename using the customer's name and mobile number
        $newFileName = $safeFileName . '.' . $fileExtension;
        $uploadFile = $uploadDir . $newFileName;

        // Move the uploaded file to the server
        if (move_uploaded_file($fileTmpPath, $uploadFile)) {
            // Estimate calculation (basic example)
            $pageCount = 10; // Placeholder for now
            $costPerPage = ($printType === 'bw') ? 3 : 5;
            $estimatedCost = $pageCount * $costPerPage;

            // Redirect to feedback page with query parameters
            header("Location: feedback.php?name=" . urlencode($customerName) . "&mobile=" . urlencode($customerMobile) . "&pages=$pageCount&type=$printType&cost=$estimatedCost");
            exit;
        } else {
            echo 'There was an error uploading the file.';
            exit;
        }
    } else {
        echo 'Invalid file type. Please upload a PDF, Word, or image file.';
        exit;
    }
} else {
    echo 'No file uploaded or form submission error.';
    exit;
}

for feedback :
<?php
// Get query parameters
$customerName = htmlspecialchars($_GET['name'] ?? '');
$customerMobile = htmlspecialchars($_GET['mobile'] ?? '');
$pageCount = htmlspecialchars($_GET['pages'] ?? '');
$printType = htmlspecialchars($_GET['type'] ?? '');
$estimatedCost = htmlspecialchars($_GET['cost'] ?? '');

// Redirect to index.html after 10 seconds
header("Refresh: 10; URL=index.html");
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Feedback</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(to right, #ff7e5f, #feb47b);
            color: #fff;
            text-align: center;
            padding: 50px;
        }
        .feedback-box {
            background: rgba(255, 255, 255, 0.9);
            color: #333;
            border-radius: 10px;
            padding: 30px;
            display: inline-block;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }
        h1 {
            color: #ff7e5f;
        }
        .highlight {
            color: #ff7e5f;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="feedback-box">
        <h1>Thank You, <?php echo $customerName; ?>!</h1>
        <p>Your order has been received. Here's your order summary:</p>
        <p><strong>Name:</strong> <?php echo $customerName; ?></p>
        <p><strong>Mobile:</strong> <?php echo $customerMobile; ?></p>
        <p><strong>Pages:</strong> <?php echo $pageCount; ?></p>
        <p><strong>Print Type:</strong> <?php echo ($printType === 'bw') ? 'Black & White' : 'Color'; ?></p>
        <p><strong>Estimated Cost:</strong> <span class="highlight"><?php echo $estimatedCost; ?> INR</span></p>
        <p>You will be redirected to the homepage in 10 seconds...</p>
    </div>
</body>
</html>

JS:
document.addEventListener("DOMContentLoaded", function () {
    const estimateBtn = document.getElementById('estimateBtn');

    estimateBtn.addEventListener('click', async function () {
        const fileUpload = document.getElementById('fileUpload').files[0];
        const printType = document.getElementById('printType').value;
        const customerName = document.getElementById('customerName').value;
        const customerMobile = document.getElementById('customerMobile').value;

        // Validation: Ensure all inputs are filled
        if (!fileUpload) {
            alert("Please upload a file!");
            return;
        }
        if (!customerName.trim()) {
            alert("Please enter your name!");
            return;
        }
        if (!customerMobile.trim() || !/^\d{10,15}$/.test(customerMobile)) {
            alert("Please enter a valid mobile number (10-15 digits)!");
            return;
        }

        // File type validation
        const validTypes = ["application/pdf", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "image/jpeg", "image/png"];
        if (!validTypes.includes(fileUpload.type)) {
            alert("Unsupported file type. Please upload a PDF, Word, or image file.");
            return;
        }

        // Page count determination
        let pageCount = 0;

        if (fileUpload.type === "application/pdf") {
            // Extract page count for PDFs using PDF.js
            pageCount = await getPdfPageCount(fileUpload);
        } else if (fileUpload.type === "application/vnd.openxmlformats-officedocument.wordprocessingml.document") {
            // Placeholder: DOCX page count estimation (requires server-side implementation for accurate count)
            pageCount = 10; // Assuming 10 pages for now
        } else if (fileUpload.type.startsWith("image/")) {
            // Each image is treated as one page
            pageCount = 1;
        }

        if (pageCount === 0) {
            alert("Failed to determine page count. Please try again with a supported file.");
            return;
        }

        // Calculate estimated cost
        const costPerPage = (printType === 'bw') ? 3 : 5; // B/W = 3 INR, Color = 5 INR
        const estimatedCost = pageCount * costPerPage;

        // Display the results in the feedback section
        const resultDiv = document.getElementById('estimateResult');
        resultDiv.innerHTML = 
            <p><strong>Number of Pages:</strong> ${pageCount}</p>
            <p><strong>Print Type:</strong> ${printType === 'bw' ? 'Black & White' : 'Color'}</p>
            <p><strong>Estimated Price:</strong> <span>${estimatedCost} INR</span></p>
        ;
    });

    /**
     * Get the page count of a PDF file using PDF.js.
     * @param {File} pdfFile - The PDF file.
     * @returns {Promise<number>} - The number of pages in the PDF.
     */
    async function getPdfPageCount(pdfFile) {
        const fileReader = new FileReader();
        return new Promise((resolve, reject) => {
            fileReader.onload = async function () {
                const pdfData = new Uint8Array(fileReader.result);
                try {
                    const pdf = await pdfjsLib.getDocument({ data: pdfData }).promise;
                    resolve(pdf.numPages);
                } catch (error) {
                    reject(error);
                }
            };
            fileReader.onerror = function () {
                reject(fileReader.error);
            };
            fileReader.readAsArrayBuffer(pdfFile);
        });
    }
});

analyse it and let me know once you have understanded it 